(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{496:function(e,a,s){"use strict";s.r(a);var t=s(1),r=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"常规"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常规"}},[e._v("#")]),e._v(" 常规")]),e._v(" "),a("p",[e._v("无论你正在 "),a("a",{attrs:{href:"https://www.webpackjs.com/guides/development",target:"_blank",rel:"noopener noreferrer"}},[e._v("development"),a("OutboundLink")],1),e._v(" 或构建 "),a("a",{attrs:{href:"https://www.webpackjs.com/guides/production",target:"_blank",rel:"noopener noreferrer"}},[e._v("production"),a("OutboundLink")],1),e._v("，以下做法应该帮助到你达到最佳。")]),e._v(" "),a("h3",{attrs:{id:"保持版本最新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保持版本最新"}},[e._v("#")]),e._v(" 保持版本最新")]),e._v(" "),a("p",[e._v("使用最新的 webpack 版本。我们会经常进行性能优化。 webpack 的最新稳定版本是：")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/webpack/webpack/releases",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/webpack.svg?label=webpack&style=flat-square&maxAge=3600",alt:"latest webpack version"}}),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("保持最新的 "),a("strong",[e._v("Node.js")]),e._v(" 也能够保证性能。除此之外，保证你的包管理工具 (例如 "),a("code",[e._v("npm")]),e._v(" 或者 "),a("code",[e._v("yarn")]),e._v(" ) 为最新也能保证性能。较新的版本能够建立更高效的模块树以及提高解析速度。")]),e._v(" "),a("h3",{attrs:{id:"loaders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loaders"}},[e._v("#")]),e._v(" Loaders")]),e._v(" "),a("p",[e._v("将 loaders 应用于最少数的必要模块中。而不是:")]),e._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("\\.js$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("loader")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"babel-loader"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("使用 "),a("code",[e._v("include")]),e._v(" 字段仅将 loader 模块应用在实际需要用其转换的位置中：")]),e._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("\\.js$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("include")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("loader")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"babel-loader"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"bootstrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap"}},[e._v("#")]),e._v(" Bootstrap")]),e._v(" "),a("p",[e._v("每个额外的 loader/plugin 都有启动时间。尽量少使用不同的工具。")]),e._v(" "),a("h3",{attrs:{id:"解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[e._v("#")]),e._v(" 解析")]),e._v(" "),a("p",[e._v("以下几步可以提供解析速度:")]),e._v(" "),a("ul",[a("li",[e._v("尽量减少 "),a("code",[e._v("resolve.modules")]),e._v(", "),a("code",[e._v("resolve.extensions")]),e._v(", "),a("code",[e._v("resolve.mainFiles")]),e._v(", "),a("code",[e._v("resolve.descriptionFiles")]),e._v(" 中类目的数量，因为他们会增加文件系统调用的次数。")]),e._v(" "),a("li",[e._v("如果你不使用 symlinks ，可以设置 "),a("code",[e._v("resolve.symlinks: false")]),e._v(" (例如 "),a("code",[e._v("npm link")]),e._v(" 或者 "),a("code",[e._v("yarn link")]),e._v(").")]),e._v(" "),a("li",[e._v("如果你使用自定义解析 plugins ，并且没有指定 context 信息，可以设置 "),a("code",[e._v("resolve.cacheWithContext: false")]),e._v(" 。")])]),e._v(" "),a("h3",{attrs:{id:"dlls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dlls"}},[e._v("#")]),e._v(" Dlls")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("DllPlugin")]),e._v(" 将更改不频繁的代码进行单独编译。这将改善引用程序的编译速度，即使它增加了构建过程的复杂性。")]),e._v(" "),a("h3",{attrs:{id:"smaller-faster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smaller-faster"}},[e._v("#")]),e._v(" Smaller = Faster")]),e._v(" "),a("p",[e._v("减少编译的整体大小，以提高构建性能。尽量保持 chunks 小巧。")]),e._v(" "),a("ul",[a("li",[e._v("使用 更少/更小 的库。")]),e._v(" "),a("li",[e._v("在多页面应用程序中使用 "),a("code",[e._v("CommonsChunksPlugin")]),e._v("。")]),e._v(" "),a("li",[e._v("在多页面应用程序中以 "),a("code",[e._v("async")]),e._v(" 模式使用 "),a("code",[e._v("CommonsChunksPlugin")]),e._v(" 。")]),e._v(" "),a("li",[e._v("移除不使用的代码。")]),e._v(" "),a("li",[e._v("只编译你当前正在开发部分的代码。")])]),e._v(" "),a("h3",{attrs:{id:"worker-pool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#worker-pool"}},[e._v("#")]),e._v(" Worker Pool")]),e._v(" "),a("p",[a("code",[e._v("thread-loader")]),e._v(" 可以将非常消耗资源的 loaders 转存到 worker pool 中。")]),e._v(" "),a("blockquote",[a("p",[e._v("不要使用太多的 workers ，因为 Node.js 的 runtime 和 loader 有一定的启动开销。最小化 workers 和主进程间的模块传输。进程间通讯(IPC)是非常消耗资源的。")])]),e._v(" "),a("h3",{attrs:{id:"持久化缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久化缓存"}},[e._v("#")]),e._v(" 持久化缓存")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("cache-loader")]),e._v(" 启用持久化缓存。使用 "),a("code",[e._v("package.json")]),e._v(" 中的 "),a("code",[e._v('"postinstall"')]),e._v(" 清除缓存目录。")]),e._v(" "),a("h3",{attrs:{id:"自定义-plugins-loaders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义-plugins-loaders"}},[e._v("#")]),e._v(" 自定义 plugins/loaders")]),e._v(" "),a("p",[e._v("这里不对它们配置的性能问题作过多赘述。")]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[e._v("#")]),e._v(" Development")]),e._v(" "),a("p",[e._v("下面步骤对于 "),a("em",[e._v("development")]),e._v(" 特别有用。")]),e._v(" "),a("h3",{attrs:{id:"增量编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增量编译"}},[e._v("#")]),e._v(" 增量编译")]),e._v(" "),a("p",[e._v("使用 webpack 的监听模式。不要使用其他工具来监听你的文件和调用 webpack 。在监听模式下构建会记录时间戳并将信息传递给编译让缓存失效。")]),e._v(" "),a("p",[e._v("在某些设置中，监听会回退到轮询模式。有许多监听文件会导致 CPU 大量负载。在这些情况下，你可以使用 "),a("code",[e._v("watchOptions.poll")]),e._v(" 来增加轮询的间隔。")]),e._v(" "),a("h3",{attrs:{id:"在内存中编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在内存中编译"}},[e._v("#")]),e._v(" 在内存中编译")]),e._v(" "),a("p",[e._v("以下几个实用工具通过在内存中进行代码的编译和资源的提供，但并不写入磁盘来提高性能:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("webpack-dev-server")])]),e._v(" "),a("li",[a("code",[e._v("webpack-hot-middleware")])]),e._v(" "),a("li",[a("code",[e._v("webpack-dev-middleware")])])]),e._v(" "),a("h3",{attrs:{id:"devtool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devtool"}},[e._v("#")]),e._v(" Devtool")]),e._v(" "),a("p",[e._v("需要注意的是不同的 "),a("code",[e._v("devtool")]),e._v(" 的设置，会导致不同的性能差异。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('"eval"')]),e._v(" 具有最好的性能，但并不能帮助你转译代码。")]),e._v(" "),a("li",[e._v("如果你能接受稍差一些的 mapping 质量，可以使用 "),a("code",[e._v("cheap-source-map")]),e._v(" 选项来提高性能")]),e._v(" "),a("li",[e._v("使用 "),a("code",[e._v("eval-source-map")]),e._v(" 配置进行增量编译。")])]),e._v(" "),a("p",[e._v("=> 在大多数情况下，"),a("code",[e._v("cheap-module-eval-source-map")]),e._v(" 是最好的选择。")]),e._v(" "),a("h3",{attrs:{id:"避免在生产环境下才会用到的工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免在生产环境下才会用到的工具"}},[e._v("#")]),e._v(" 避免在生产环境下才会用到的工具")]),e._v(" "),a("p",[e._v("某些实用工具， plugins 和 loaders 都只能在构建生产环境时才有用。例如，在开发时使用 "),a("code",[e._v("UglifyJsPlugin")]),e._v(" 来压缩和修改代码是没有意义的。以下这些工具在开发中通常被排除在外:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("UglifyJsPlugin")])]),e._v(" "),a("li",[a("code",[e._v("ExtractTextPlugin")])]),e._v(" "),a("li",[a("code",[e._v("[hash]")]),e._v("/"),a("code",[e._v("[chunkhash]")])]),e._v(" "),a("li",[a("code",[e._v("AggressiveSplittingPlugin")])]),e._v(" "),a("li",[a("code",[e._v("AggressiveMergingPlugin")])]),e._v(" "),a("li",[a("code",[e._v("ModuleConcatenationPlugin")])])]),e._v(" "),a("h3",{attrs:{id:"最小化入口-chunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小化入口-chunk"}},[e._v("#")]),e._v(" 最小化入口 chunk")]),e._v(" "),a("p",[e._v("webpack 只会在文件系统中生成已经更新的 chunk 。对于某些配置选项(HMR, "),a("code",[e._v("[name]")]),e._v("/"),a("code",[e._v("[chunkhash]")]),e._v(" in "),a("code",[e._v("output.chunkFilename")]),e._v(", "),a("code",[e._v("[hash]")]),e._v(")来说，除了更新的 chunks 无效之外，入口 chunk 也不会生效。")]),e._v(" "),a("p",[e._v("应当在生成入口 chunk 时，尽量减少入口 chunk 的体积，以提高性能。下述代码块将只提取包含 runtime 的 chunk ，"),a("em",[e._v("其他 chunk 都作为子模块")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("CommonsChunkPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"manifest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("minChunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("Infinity")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"production"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#production"}},[e._v("#")]),e._v(" Production")]),e._v(" "),a("p",[e._v("以下步骤在 "),a("em",[e._v("production")]),e._v(" 中非常有用。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("不要为了非常小的性能增益，牺牲你应用程序的质量！")]),e._v(" 请注意，优化代码质量在大多数情况下比构建性能更重要。")])]),e._v(" "),a("h3",{attrs:{id:"多个编译时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个编译时"}},[e._v("#")]),e._v(" 多个编译时")]),e._v(" "),a("p",[e._v("当进行多个编译时，以下工具可以帮助到你:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/trivago/parallel-webpack",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("parallel-webpack")]),a("OutboundLink")],1),e._v(": 它允许编译工作在 worker 池中进行。")]),e._v(" "),a("li",[a("code",[e._v("cache-loader")]),e._v(": 缓存可以在多个编译时之间共享。")])]),e._v(" "),a("h3",{attrs:{id:"source-maps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#source-maps"}},[e._v("#")]),e._v(" Source Maps")]),e._v(" "),a("p",[e._v("Source maps 真的很消耗资源。你真的需要他们？")]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"工具相关问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具相关问题"}},[e._v("#")]),e._v(" 工具相关问题")]),e._v(" "),a("p",[e._v("下列工具存在某些可能会降低构建性能的问题。")]),e._v(" "),a("h3",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[e._v("#")]),e._v(" Babel")]),e._v(" "),a("ul",[a("li",[e._v("项目中的 preset/plugins 数量最小化。")])]),e._v(" "),a("h3",{attrs:{id:"typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[e._v("#")]),e._v(" TypeScript")]),e._v(" "),a("ul",[a("li",[e._v("在单独的进程中使用 "),a("code",[e._v("fork-ts-checker-webpack-plugin")]),e._v(" 进行类型检查。")]),e._v(" "),a("li",[e._v("配置 loaders 跳过类型检查。")]),e._v(" "),a("li",[e._v("使用 "),a("code",[e._v("ts-loader")]),e._v(" 时，设置 "),a("code",[e._v("happyPackMode: true")]),e._v(" / "),a("code",[e._v("transpileOnly: true")]),e._v("。")])]),e._v(" "),a("h3",{attrs:{id:"sass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass"}},[e._v("#")]),e._v(" Sass")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("node-sass")]),e._v(" 中有个来自 Node.js 线程池的阻塞线程的 bug。 当使用 "),a("code",[e._v("thread-loader")]),e._v(" 时，需要设置 "),a("code",[e._v("workerParallelJobs: 2")]),e._v("。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);