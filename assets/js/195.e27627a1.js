(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{516:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("可选链 "),t("code",[s._v("?.")]),s._v(" 是一种访问嵌套对象属性的安全的方式。即使中间的属性不存在，也不会出现错误。")]),s._v(" "),t("h2",{attrs:{id:"不存在的属性-的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不存在的属性-的问题"}},[s._v("#")]),s._v(" “不存在的属性”的问题")]),s._v(" "),t("p",[s._v("举个例子，假设我们有很多个 "),t("code",[s._v("user")]),s._v(" 对象，其中存储了我们的用户数据。")]),s._v(" "),t("p",[s._v("我们大多数用户的地址都存储在 "),t("code",[s._v("user.address")]),s._v(" 中，街道地址存储在 "),t("code",[s._v("user.address.street")]),s._v(" 中，但有些用户没有提供这些信息。")]),s._v(" "),t("p",[s._v("在这种情况下，当我们尝试获取 "),t("code",[s._v("user.address.street")]),s._v("，而该用户恰好没提供地址信息，我们则会收到一个错误：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 一个没有 "address" 属性的 user 对象')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Error!")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("这是预期的结果。"),t("code",[s._v("JavaScript")]),s._v(" 的工作原理就是这样的。因为 "),t("code",[s._v("user.address")]),s._v(" 为 "),t("code",[s._v("undefined")]),s._v("，尝试读取 "),t("code",[s._v("user.address.street")]),s._v(" 会失败，并收到一个错误。")]),s._v(" "),t("p",[s._v("但是在很多实际场景中，我们更希望得到的是 "),t("code",[s._v("undefined")]),s._v("（表示没有 "),t("code",[s._v("street")]),s._v(" 属性）而不是一个错误。")]),s._v(" "),t("p",[s._v("……还有另一个例子。在 "),t("code",[s._v("Web")]),s._v(" 开发中，我们可以使用特殊的方法调用（例如 "),t("code",[s._v("document.querySelector('.elem')")]),s._v("）以对象的形式获取一个网页元素，如果没有这种对象，则返回 "),t("code",[s._v("null")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 document.querySelector('.elem') 的结果为 null，则这里不存在这个元素")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// let html = document.querySelector('.elem').innerHTML; // 如果 document.querySelector('.elem') 的结果为 null，则会出现错误")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("同样，如果该元素不存在，则访问 "),t("code",[s._v("null")]),s._v(" 的 "),t("code",[s._v(".innerHTML")]),s._v(" 时会出错。在某些情况下，当元素的缺失是没问题的时候，我们希望避免出现这种错误，而是接受 "),t("code",[s._v("html = null")]),s._v(" 作为结果。")]),s._v(" "),t("p",[s._v("我们如何实现这一点呢？")]),s._v(" "),t("p",[s._v("可能最先想到的方案是在访问该值的属性之前，使用 "),t("code",[s._v("if")]),s._v(" 或条件运算符 "),t("code",[s._v("?")]),s._v(" 对该值进行检查，像这样：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("这样可以，这里就不会出现错误了……但是不够优雅。就像你所看到的，"),t("code",[s._v('"user.address"')]),s._v(" 在代码中出现了两次。对于嵌套层次更深的属性就会出现更多次这样的重复，这就是问题了。")]),s._v(" "),t("p",[s._v("例如，让我们尝试获取 "),t("code",[s._v("user.address.street.name")]),s._v("。")]),s._v(" "),t("p",[s._v("我们既需要检查 "),t("code",[s._v("user.address")]),s._v("，又需要检查 "),t("code",[s._v("user.address.street")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// user 没有 address 属性")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("这样就太扯淡了，并且这可能导致写出来的代码很难让别人理解。")]),s._v(" "),t("p",[s._v("甚至我们可以先忽略这个问题，因为我们有一种更好的实现方式，就是使用 "),t("code",[s._v("&&")]),s._v(" 运算符：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// user 没有 address 属性")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined（不报错）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("依次对整条路径上的属性使用与运算进行判断，以确保所有节点是存在的（如果不存在，则停止计算），但仍然不够优雅。")]),s._v(" "),t("p",[s._v("就像你所看到的，在代码中我们仍然重复写了好几遍对象属性名。例如在上面的代码中，"),t("code",[s._v("user.address")]),s._v(" 被重复写了三遍。")]),s._v(" "),t("p",[s._v("这就是为什么可选链 "),t("code",[s._v("?.")]),s._v(" 被加入到了 "),t("code",[s._v("JavaScript")]),s._v(" 这门编程语言中。那就是彻底地解决以上所有问题！")]),s._v(" "),t("h2",{attrs:{id:"可选链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可选链"}},[s._v("#")]),s._v(" 可选链")]),s._v(" "),t("p",[s._v("如果可选链 "),t("code",[s._v("?.")]),s._v(" 前面的部分是 "),t("code",[s._v("undefined")]),s._v(" 或者 "),t("code",[s._v("null")]),s._v("，它会停止运算并返回该部分。")]),s._v(" "),t("p",[t("strong",[s._v("为了简明起见，在本文接下来的内容中，我们会说如果一个属性既不是 "),t("code",[s._v("null")]),s._v(" 也不是 "),t("code",[s._v("undefined")]),s._v("，那么它就“存在”。")])]),s._v(" "),t("p",[s._v("换句话说，例如 "),t("code",[s._v("value?.prop")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("如果 "),t("code",[s._v("value")]),s._v(" 存在，则结果与 "),t("code",[s._v("value.prop")]),s._v(" 相同，")]),s._v(" "),t("li",[s._v("否则（当 "),t("code",[s._v("value")]),s._v(" 为 "),t("code",[s._v("undefined/null")]),s._v(" 时）则返回 "),t("code",[s._v("undefined")]),s._v("。")])]),s._v(" "),t("p",[s._v("下面这是一种使用 "),t("code",[s._v("?.")]),s._v(" 安全地访问 "),t("code",[s._v("user.address.street")]),s._v(" 的方式：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// user 没有 address 属性")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("street "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined（不报错）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("代码简洁明了，也不用重复写好几遍属性名。")]),s._v(" "),t("p",[s._v("即使 对象 "),t("code",[s._v("user")]),s._v(" 不存在，使用 "),t("code",[s._v("user?.address")]),s._v(" 来读取地址也没问题：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("address "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("street "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("请注意："),t("code",[s._v("?.")]),s._v(" 语法使其前面的值成为可选值，但不会对其后面的起作用。")]),s._v(" "),t("p",[s._v("例如，在 "),t("code",[s._v("user?.address.street.name")]),s._v(" 中，"),t("code",[s._v("?.")]),s._v(" 允许 "),t("code",[s._v("user")]),s._v(" 为 "),t("code",[s._v("null/undefined")]),s._v("，但仅此而已。更深层次的属性是通过常规方式访问的。如果我们希望它们中的一些也是可选的，那么我们需要使用更多的 "),t("code",[s._v("?.")]),s._v(" 来替换 "),t("code",[s._v(".")]),s._v("。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("不要过度使用可选链")])]),s._v(" "),t("p",[s._v("我们应该只将 "),t("code",[s._v("?.")]),s._v(" 使用在一些东西可以不存在的地方。")]),s._v(" "),t("p",[s._v("例如，如果根据我们的代码逻辑，"),t("code",[s._v("user")]),s._v(" 对象必须存在，但 "),t("code",[s._v("address")]),s._v(" 是可选的，那么我们应该这样写 "),t("code",[s._v("user.address?.street")]),s._v("，而不是这样 "),t("code",[s._v("user?.address?.street")]),s._v("。")]),s._v(" "),t("p",[s._v("所以，如果 "),t("code",[s._v("user")]),s._v(" 恰巧因为失误变为 undefined，我们会看到一个编程错误并修复它。否则，代码中的错误在不恰当的地方被消除了，这会导致调试更加困难。")])]),s._v(" "),t("blockquote",[t("p",[t("strong",[t("code",[s._v("?.")]),s._v(" 前的变量必须已声明")])]),s._v(" "),t("p",[s._v("如果未声明变量 "),t("code",[s._v("user")]),s._v("，那么 "),t("code",[s._v("user?.anything")]),s._v(" 会触发一个错误：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReferenceError: user is not defined")]),s._v("\nuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("code",[s._v("?.")]),s._v(" 前的变量必须已声明（例如 "),t("code",[s._v("let/const/var user")]),s._v(" 或作为一个函数参数）。可选链仅适用于已声明的变量。")])]),s._v(" "),t("h2",{attrs:{id:"短路效应"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短路效应"}},[s._v("#")]),s._v(" 短路效应")]),s._v(" "),t("p",[s._v("正如前面所说的，如果 "),t("code",[s._v("?.")]),s._v(" 左边部分不存在，就会立即停止运算（“短路效应”）。")]),s._v(" "),t("p",[s._v("所以，如果后面有任何函数调用或者副作用，它们均不会执行。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("blockquote",[t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 没有 "sayHi"，因此代码执行没有触达 x++')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0，值没有增加")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("h2",{attrs:{id:"其他变体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他变体"}},[s._v("#")]),s._v(" 其他变体： ?.()， ?.[]")]),s._v(" "),t("p",[s._v("可选链 "),t("code",[s._v("?.")]),s._v(" 不是一个运算符，而是一个特殊的语法结构。它还可以与函数和方括号一起使用。")]),s._v(" "),t("p",[s._v("例如，将 "),t("code",[s._v("?.()")]),s._v(" 用于调用一个可能不存在的函数。")]),s._v(" "),t("p",[s._v("在下面这段代码中，有些用户具有 "),t("code",[s._v("admin")]),s._v(" 方法，而有些没有：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" userAdmin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I am admin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" userGuest "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nuserAdmin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("admin"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// I am admin")]),s._v("\n\nuserGuest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("admin"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 啥都没有（没有这样的方法）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("在这两行代码中，我们首先使用点符号（"),t("code",[s._v("user1.admin")]),s._v("）来获取 "),t("code",[s._v("admin")]),s._v(" 属性，因为用户对象一定存在，因此可以安全地读取它。")]),s._v(" "),t("p",[s._v("然后 "),t("code",[s._v("?.()")]),s._v(" 会检查它左边的部分：如果 "),t("code",[s._v("admin")]),s._v(" 函数存在，那么就调用运行它（对于 "),t("code",[s._v("user1")]),s._v("）。否则（对于 "),t("code",[s._v("user2")]),s._v("）运算停止，没有错误。")]),s._v(" "),t("p",[s._v("如果我们想使用方括号 "),t("code",[s._v("[]")]),s._v(" 而不是点符号 "),t("code",[s._v(".")]),s._v(" 来访问属性，语法 "),t("code",[s._v("?.[]")]),s._v(" 也可以使用。跟前面的例子类似，它允许从一个可能不存在的对象上安全地读取属性。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("firstName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设，我们不能授权此用户")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"firstName"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// John")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" user1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("something"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("not"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("existing"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("此外，我们还可以将 "),t("code",[s._v("?.")]),s._v(" 跟 "),t("code",[s._v("delete")]),s._v(" 一起使用：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("delete user?.name; // 如果 user 存在，则删除 user.name\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[t("strong",[s._v("我们可以使用 "),t("code",[s._v("?.")]),s._v(" 来安全地读取或删除，但不能写入")])]),s._v(" "),t("p",[s._v("可选链 "),t("code",[s._v("?.")]),s._v(" 不能用在赋值语句的左侧。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?.")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Error，不起作用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 因为它在计算的是 undefined = "John"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这还不是那么智能。")])]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("可选链 "),t("code",[s._v("?.")]),s._v(" 语法有三种形式：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("obj?.prop")]),s._v(" —— 如果 "),t("code",[s._v("obj")]),s._v(" 存在则返回 "),t("code",[s._v("obj.prop")]),s._v("，否则返回 "),t("code",[s._v("undefined")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("obj?.[prop]")]),s._v(" —— 如果 "),t("code",[s._v("obj")]),s._v(" 存在则返回 "),t("code",[s._v("obj[prop]")]),s._v("，否则返回 "),t("code",[s._v("undefined")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("obj.method?.()")]),s._v(" —— 如果 "),t("code",[s._v("obj.method")]),s._v(" 存在则调用 "),t("code",[s._v("obj.method()")]),s._v("，否则返回 "),t("code",[s._v("undefined")]),s._v("。")])]),s._v(" "),t("p",[s._v("正如我们所看到的，这些语法形式用起来都很简单直接。"),t("code",[s._v("?.")]),s._v(" 检查左边部分是否为 "),t("code",[s._v("null/undefined")]),s._v("，如果不是则继续运算。")]),s._v(" "),t("p",[t("code",[s._v("?.")]),s._v(" 链使我们能够安全地访问嵌套属性。")]),s._v(" "),t("p",[s._v("但是，我们应该谨慎地使用 "),t("code",[s._v("?.")]),s._v("，仅在当左边部分不存在也没问题的情况下使用为宜。以保证在代码中有编程上的错误出现时，也不会对我们隐藏。")])])}),[],!1,null,null,null);t.default=n.exports}}]);