(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{513:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("对于开发者来说，"),a("code",[s._v("JavaScript")]),s._v(" 的内存管理是自动的、无形的。我们创建的原始值、对象、函数……这一切都会占用内存。")]),s._v(" "),a("p",[s._v("当我们不再需要某个东西时会发生什么？"),a("code",[s._v("JavaScript")]),s._v(" 引擎如何发现它并清理它？")]),s._v(" "),a("h2",{attrs:{id:"可达性-reachability"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可达性-reachability"}},[s._v("#")]),s._v(" 可达性（Reachability）")]),s._v(" "),a("p",[a("code",[s._v("JavaScript")]),s._v(" 中主要的内存管理概念是 "),a("strong",[s._v("可达性")]),s._v("。")]),s._v(" "),a("p",[s._v("简而言之，“可达”值是那些以某种方式可访问或可用的值。它们一定是存储在内存中的。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("这里列出固有的可达值的基本集合，这些值明显不能被释放。")]),s._v(" "),a("p",[s._v("比方说：")]),s._v(" "),a("ul",[a("li",[s._v("当前函数的局部变量和参数。")]),s._v(" "),a("li",[s._v("嵌套调用时，当前调用链上所有函数的变量与参数。")]),s._v(" "),a("li",[s._v("全局变量。")]),s._v(" "),a("li",[s._v("（还有一些内部的）")])]),s._v(" "),a("p",[s._v("这些值被称作 "),a("strong",[s._v("根（"),a("code",[s._v("roots")]),s._v("）")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("如果一个值可以通过引用或引用链从根访问任何其他值，则认为该值是可达的。")]),s._v(" "),a("p",[s._v("比方说，如果全局变量中有一个对象，并且该对象有一个属性引用了另一个对象，则 "),a("strong",[s._v("该")]),s._v(" 对象被认为是可达的。而且它引用的内容也是可达的。下面是详细的例子。")])])]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("JavaScript")]),s._v(" 引擎中有一个被称作 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[s._v("垃圾回收器"),a("OutboundLink")],1),s._v(" 的东西在后台执行。它监控着所有对象的状态，并删除掉那些已经不可达的。")]),s._v(" "),a("h2",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// user 具有对这个对象的引用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206215220.png",alt:""}})]),s._v(" "),a("p",[s._v("这里的箭头描述了一个对象引用。全局变量 "),a("code",[s._v('"user"')]),s._v(" 引用了对象 "),a("code",[s._v('{name："John"}')]),s._v("（为简洁起见，我们称它为 "),a("code",[s._v("John")]),s._v("）。"),a("code",[s._v("John")]),s._v(" 的 "),a("code",[s._v('"name"')]),s._v(" 属性存储一个原始值，所以它被写在对象内部。")]),s._v(" "),a("p",[s._v("如果 "),a("code",[s._v("user")]),s._v(" 的值被重写了，这个引用就没了：")]),s._v(" "),a("blockquote",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("user = null;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206215709.png",alt:""}})]),s._v(" "),a("p",[s._v("现在 "),a("code",[s._v("John")]),s._v(" 变成不可达的了。因为没有引用了，就不能访问到它了。垃圾回收器会认为它是垃圾数据并进行回收，然后释放内存。")]),s._v(" "),a("h2",{attrs:{id:"两个引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个引用"}},[s._v("#")]),s._v(" 两个引用")]),s._v(" "),a("p",[s._v("现在让我们想象下，我们把 "),a("code",[s._v("user")]),s._v(" 的引用复制给 "),a("code",[s._v("admin")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// user 具有对这个对象的引用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" admin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206220456.png",alt:""}})]),s._v(" "),a("p",[s._v("现在如果执行刚刚的那个操作：")]),s._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("p",[s._v("……然后对象仍然可以被通过 "),a("code",[s._v("admin")]),s._v(" 这个全局变量访问到，所以对象还在内存中。如果我们又重写了 "),a("code",[s._v("admin")]),s._v("，对象就会被删除。")]),s._v(" "),a("h2",{attrs:{id:"相互关联的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相互关联的对象"}},[s._v("#")]),s._v(" 相互关联的对象")]),s._v(" "),a("p",[s._v("现在来看一个更复杂的例子。这是个家庭：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("marry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("man"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" woman")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  woman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("husband "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" man"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  man"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wife "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" woman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("father")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" man"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("mother")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" woman\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" family "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("marry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ann"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[a("code",[s._v("marry")]),s._v(" 函数通过让两个对象相互引用使它们“结婚”了，并返回了一个包含这两个对象的新对象。")]),s._v(" "),a("p",[s._v("由此产生的内存结构：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206220804.png",alt:""}})]),s._v(" "),a("p",[s._v("到目前为止，所有对象都是可达的。")]),s._v(" "),a("p",[s._v("现在让我们移除两个引用：")]),s._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" family"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("father"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" family"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mother"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("husband"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206220841.png",alt:""}})]),s._v(" "),a("p",[s._v("仅删除这两个引用中的一个是不够的，因为所有的对象仍然都是可达的。")]),s._v(" "),a("p",[s._v("但是，如果我们把这两个都删除，那么我们可以看到再也没有对 John 的引用了：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206220905.png",alt:""}})]),s._v(" "),a("p",[s._v("对外引用不重要，只有传入引用才可以使对象可达。所以，"),a("code",[s._v("John")]),s._v(" 现在是不可达的，并且将被从内存中删除，同时 "),a("code",[s._v("John")]),s._v(" 的所有数据也将变得不可达。")]),s._v(" "),a("p",[s._v("经过垃圾回收：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206220948.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"无法到达的岛屿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无法到达的岛屿"}},[s._v("#")]),s._v(" 无法到达的岛屿")]),s._v(" "),a("p",[s._v("几个对象相互引用，但外部没有对其任意对象的引用，这些对象也可能是不可达的，并被从内存中删除。")]),s._v(" "),a("p",[s._v("源对象与上面相同。然后：")]),s._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("family "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("p",[s._v("内存内部状态将变成：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206221045.png",alt:""}})]),s._v(" "),a("p",[s._v("这个例子展示了可达性概念的重要性。")]),s._v(" "),a("p",[s._v("显而易见，"),a("code",[s._v("John")]),s._v(" 和 "),a("code",[s._v("Ann")]),s._v(" 仍然连着，都有传入的引用。但是，这样还不够。")]),s._v(" "),a("p",[s._v("前面说的 "),a("code",[s._v('"family"')]),s._v(" 对象已经不再与根相连，没有了外部对其的引用，所以它变成了一座“孤岛”，并且将被从内存中删除。")]),s._v(" "),a("h2",{attrs:{id:"内部算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部算法"}},[s._v("#")]),s._v(" 内部算法")]),s._v(" "),a("p",[s._v("垃圾回收的基本算法被称为 “"),a("code",[s._v("mark-and-sweep")]),s._v("”。")]),s._v(" "),a("p",[s._v("定期执行以下“垃圾回收”步骤：")]),s._v(" "),a("ul",[a("li",[s._v("垃圾收集器找到所有的根，并“标记”（记住）它们。")]),s._v(" "),a("li",[s._v("然后它遍历并“标记”来自它们的所有引用。")]),s._v(" "),a("li",[s._v("然后它遍历标记的对象并标记 "),a("strong",[s._v("它们的")]),s._v(" 引用。所有被遍历到的对象都会被记住，以免将来再次遍历到同一个对象。")]),s._v(" "),a("li",[s._v("……如此操作，直到所有可达的（从根部）引用都被访问到。")]),s._v(" "),a("li",[s._v("没有被标记的对象都会被删除。")])]),s._v(" "),a("p",[s._v("例如，使我们的对象有如下的结构：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206221220.png",alt:""}})]),s._v(" "),a("p",[s._v("我们可以清楚地看到右侧有一个“无法到达的岛屿”。现在我们来看看“标记和清除”垃圾收集器如何处理它。")]),s._v(" "),a("p",[s._v("第一步标记所有的根：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206221244.png",alt:""}})]),s._v(" "),a("p",[s._v("然后它们的引用被标记了：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206221314.png",alt:""}})]),s._v(" "),a("p",[s._v("……如果还有引用的话，继续标记：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206221342.png",alt:""}})]),s._v(" "),a("p",[s._v("现在，无法通过这个过程访问到的对象被认为是不可达的，并且会被删除。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://picgoi-mg.oss-cn-beijing.aliyuncs.com/img/20201206222658.png",alt:""}})]),s._v(" "),a("p",[s._v("我们还可以将这个过程想象成从根溢出一个巨大的油漆桶，它流经所有引用并标记所有可到达的对象。然后移除未标记的。")]),s._v(" "),a("p",[s._v("这是垃圾收集工作的概念。"),a("code",[s._v("JavaScript")]),s._v(" 引擎做了许多优化，使垃圾回收运行速度更快，并且不影响正常代码运行。")]),s._v(" "),a("p",[s._v("一些优化建议：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("分代收集（Generational collection）")]),s._v("—— 对象被分成两组：“新的”和“旧的”。许多对象出现，完成它们的工作并很快死去，它们可以很快被清理。那些长期存活的对象会变得“老旧”，而且被检查的频次也会减少。")]),s._v(" "),a("li",[a("strong",[s._v("增量收集（Incremental collection）")]),s._v("—— 如果有许多对象，并且我们试图一次遍历并标记整个对象集，则可能需要一些时间，并在执行过程中带来明显的延迟。所以引擎试图将垃圾收集工作分成几部分来做。然后将这几部分会逐一进行处理。这需要它们之间有额外的标记来追踪变化，但是这样会有许多微小的延迟而不是一个大的延迟。")]),s._v(" "),a("li",[a("strong",[s._v("闲时收集（Idle-time collection）")]),s._v("—— 垃圾收集器只会在 "),a("code",[s._v("CPU")]),s._v(" 空闲时尝试运行，以减少可能对代码执行的影响。")])]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("主要需要掌握的内容：")]),s._v(" "),a("ul",[a("li",[s._v("垃圾回收是自动完成的，我们不能强制执行或是阻止执行。")]),s._v(" "),a("li",[s._v("当对象是可达状态时，它一定是存在于内存中的。")]),s._v(" "),a("li",[s._v("被引用与可访问（从一个根）不同：一组相互连接的对象可能整体都不可达。")])]),s._v(" "),a("p",[s._v("现代引擎实现了垃圾回收的高级算法。")])])}),[],!1,null,null,null);a.default=e.exports}}]);